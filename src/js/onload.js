"use strict";(()=>{var n=class{static initialize(){document.addEventListener("keydown",t=>{let e=t.key;e&&(this._keyDown[e]=!0,this._keyHold[e]=!0,this._keyUp[e]=!1)}),document.addEventListener("keyup",t=>{let e=t.key;e&&(this._keyUp[e]=!0,this._keyHold[e]=!1,this._keyDown[e]=!1)}),document.addEventListener("keypress",t=>{let e=t.key;e&&(this._keyDown[e]=!1,this._keyHold[e]=!0,this._keyUp[e]=!1)})}static getKeyDown(t){return this._keyDown[t]||!1}static getKeyUp(t){return this._keyUp[t]||!1}static getKeyHold(t){return this._keyHold[t]||!1}};n._keyDown={},n._keyUp={},n._keyHold={};var y;(t=>{let e=class e{constructor(){this._displaySetting="fullscreen"}static get instance(){return this._instance||(this._instance=new e),this._instance}get displaySetting(){return this._displaySetting}changeDisplaySetting(l){this._displaySetting=l,document.getElementById("display")?.classList.remove("display-fullscreen","display-16x9"),document.getElementById("display")?.classList.add(`display-${l}`)}};e._instance=null;let i=e;t.DisplaySettings=e})(y||(y={}));var g=y.DisplaySettings;var m;(t=>{let e=class e{constructor(){this._fps=60;this._waitTime=1e3/this._fps;this._displaySetting=g.instance}static get instance(){return this._instance||(this._instance=new e),this._instance}get FPS(){return this._fps}get waitTime(){return this._waitTime}get displaySetting(){return this._displaySetting}initialize(){console.log(`FPS: ${this.FPS}`),console.log(`Wait Time: ${this.waitTime}`);let l=document.getElementById("display");l?(l.classList.add(`display-${this.displaySetting.displaySetting}`),console.log(`Display Setting: ${this.displaySetting.displaySetting}`)):console.error("Display element not found.")}};e._instance=null;let i=e;t.GameSettings=e})(m||(m={}));var p=m.GameSettings;var u=class u{constructor(){this._updateFunctions=[];this._currentScene=null}static get instance(){return this._instance||(this._instance=new u),this._instance}currentScene(){return this._currentScene}changeScene(t,e=null){this._currentScene&&(this._currentScene=null),this._currentScene=e||new t,this._updateFunctions=[],this._currentScene.initialize()}addUpdateFunction(t){if(typeof t=="function"){this._updateFunctions.push(t);return}console.error("SceneManager: addUpdateFunction expects a function.")}update(){this._updateFunctions.forEach(t=>t())}};u._instance=null;var s=u;var d=class d{constructor(){this._isRunning=!1}static get instance(){return this._instance||(this._instance=new d),this._instance}get isRunning(){return this._isRunning}initialize(){p.instance.initialize()}startGame(t){if(this._isRunning){console.log("Game is already running.");return}this._isRunning=!0,s.instance.changeScene(t),console.log("Game started.")}stopGame(){if(!this._isRunning){console.log("Game is not running.");return}this._isRunning=!1,console.log("Game stopped.")}};d._instance=null;var a=d;var r=class{get sceneID(){return this._sceneID}constructor(t){this._sceneID=t}};var c=class extends r{constructor(){super("scene-title")}initialize(){console.log("SceneTitle initialized.")}};var o=class{constructor(){}initialize(){a.instance.initialize(),n.initialize(),a.instance.startGame(c)}update(){s.instance.update(),a.instance.isRunning&&setTimeout(()=>{this.update()},p.instance.waitTime)}};window.onload=function(){let i=new o;i.initialize(),i.update()};})();
//# sourceMappingURL=onload.js.map
